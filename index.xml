<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on Beygl</title>
    <link>https://blog.yanggliang.cc/</link>
    <description>Recent content in Introduction on Beygl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="https://blog.yanggliang.cc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clash配置</title>
      <link>https://blog.yanggliang.cc/posts/Linux/clash%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 13 Feb 2022 16:10:13 +0800</pubDate>
      <guid>https://blog.yanggliang.cc/posts/Linux/clash%E9%85%8D%E7%BD%AE/</guid>
      <description>下载与安装 # 可以自行到仓库中下载最新版本，也可以直接复制以下命令并执行。&#xA;wget https://github.com/Dreamacro/clash/releases/download/v0.19.0/clash-linux-amd64-v0.19.0.gz 依次执行下面命令。&#xA;gzip -d clash-linux-amd64-v0.19.0.gz mv clash-linux-amd64-v0.19.0 /usr/bin/clash chmod +x /usr/bin/clash 将其注册为服务并开机自启 # 在/lib/systemd/system/下创建文件clash@.service：&#xA;sudo vim /lib/systemd/system/clash@.service 将以下内容复制到clash@.service中：&#xA;[Unit] Description=A rule based proxy in Go for %i. After=network.target [Service] Type=simple User=%i Restart=on-abort ExecStart=/usr/bin/clash [Install] WantedBy=multi-user.target 执行以下命令重新加载服务模块以及启动clash服务：&#xA;systemctl daemon-reload systemctl start clash@user #user为自己当前的用户名 设置开机自启动：&#xA;systemctl enable clash@user 配置UI # 第一次启动会在~/.config/clash下生成初始文件，现在开始配置dashboard，使得其可以在浏览器中配置节点。&#xA;cd ~/.config/clash wget https://github.com/haishanh/yacd/archive/gh-pages.zip unzip gh-pages.zip mv yacd-gh-pages/ dashboard/ 订阅文件可以从机场官网获得，或者复制Windows下的配置文件，在其中添加上如下配置：&#xA;secret: xxxx external-controller: 0.0.0.0:9090 #若是云服务器记得开放端口 external-ui: dashboard 重启服务：</description>
    </item>
    <item>
      <title>39課</title>
      <link>https://blog.yanggliang.cc/posts/Nihongo/39%E8%AA%B2/</link>
      <pubDate>Sun, 13 Feb 2022 15:35:50 +0800</pubDate>
      <guid>https://blog.yanggliang.cc/posts/Nihongo/39%E8%AA%B2/</guid>
      <description>単語 # いね　稲&#xA;きり　霧&#xA;霧がかかっている。 もん　門&#xA;ぶたい　舞台&#xA;やね　屋根　屋顶&#xA;るりがわら　瑠璃瓦&#xA;きいろ　黄色&#xA;バック　back　背景&#xA;この建物をバックにして、写真を撮ってもらいませんか。 かしきり　貸切　包租&#xA;貸切バス 貸切温泉 いっぱん　一般&#xA;そぼ　祖母&#xA;ジャズ　jazz&#xA;やがい　野外コンサート　露天音乐会&#xA;えんだか　円高　日元升值&#xA;円安　日元贬值 ゆしゅつ　輸出　出口、输出&#xA;ゆにゅう　輸入 えいきょう　影響&#xA;しげん　資源&#xA;資源が豊かです。　ゆたか　豊か きおん　気温&#xA;気温が高い／低い。　ひくい　低い おき　沖　海上、湖心&#xA;おきなわ　沖縄 かいがい　海外&#xA;クジラ　鯨&#xA;サメ　鮫　鲨鱼</description>
    </item>
    <item>
      <title>38課</title>
      <link>https://blog.yanggliang.cc/posts/Nihongo/38%E8%AA%B2/</link>
      <pubDate>Wed, 09 Feb 2022 18:57:46 +0800</pubDate>
      <guid>https://blog.yanggliang.cc/posts/Nihongo/38%E8%AA%B2/</guid>
      <description>単語 # しょうひん　商品&#xA;ごみばこ　ゴミ箱垃圾箱&#xA;コップ　kop（荷兰语）　杯子&#xA;ペットボトル　pet bottle　塑料瓶&#xA;エンジン　engine　引擎&#xA;タイヤ　tire　轮胎&#xA;フートン　胡同　胡同&#xA;ろじ　路地　小巷、弄堂&#xA;にほんしょく　日本食&#xA;さしみ　刺身&#xA;たな　棚　橱柜&#xA;たたみ　畳　草垫、榻榻米&#xA;きもの　着物　和服&#xA;ぐあい　具合　情况、状况&#xA;体の具合がいい／悪い。 ひらがな　平仮名&#xA;カタカナ　片仮名&#xA;あかちゃん　赤ちゃん　婴儿&#xA;はんぶん　半分　一半&#xA;さいしゅう　最終&#xA;試合&#xA;えいじしんぶん　英字新聞&#xA;えいせいほうそう　衛星放送　卫星广播&#xA;ストレス　stress　精神紧张状态&#xA;かいしょうほう　解消法&#xA;ストレス解消法 いりくむ　入り組む　错综复杂</description>
    </item>
    <item>
      <title>37課</title>
      <link>https://blog.yanggliang.cc/posts/Nihongo/37%E8%AA%B2/</link>
      <pubDate>Wed, 09 Feb 2022 18:57:43 +0800</pubDate>
      <guid>https://blog.yanggliang.cc/posts/Nihongo/37%E8%AA%B2/</guid>
      <description> 単語 # ようじ　用事 たいかい　大会 きぼ　規模 けいかく　計画 きそく　規則 ひよう　費用 しお　塩 メダル　medal ソフト　software　アプリ　app はんにん　犯人 たんい　単位　计量单位、学分 ばんごうふだ　番号札　顺序条、号码条 こさじ　小さじ　小勺 ボリューム　volume ちょくつうれっしゃ　直通列車 せかいいさん　世界遺産 かんこう　観光スポット　spot こえる　超える しゅつじょうする　出場する しゃくほうする　釈放する つまみぐいする　つまみ食いする　偷吃 ふくしゅうする　よしゅうする　復習　予習 せいこう　しっぱい　成功　失敗 ぜいたく　贅沢　奢侈 贅沢な生活 こっそり　偷偷地、悄悄地 さすが　不愧是、果然 じっさいに　実際に </description>
    </item>
    <item>
      <title>36課</title>
      <link>https://blog.yanggliang.cc/posts/Nihongo/36%E8%AA%B2/</link>
      <pubDate>Wed, 09 Feb 2022 18:55:42 +0800</pubDate>
      <guid>https://blog.yanggliang.cc/posts/Nihongo/36%E8%AA%B2/</guid>
      <description>単語 # こうじょう　工場&#xA;えんとつ　煙突&#xA;グラウンド　ground&#xA;おくじょう　屋上　屋顶&#xA;屋上カフェ　cafe&#xA;たこ　凧　风筝&#xA;タープ　tape　磁带&#xA;どくしょ　読書&#xA;しんせい　申請　友達申請を送りました。&#xA;かんさいべん　関西弁&#xA;日本文化　日本文化に興味がある。&#xA;はかりうり　量り売り　秤斤卖&#xA;ご主人／旦那さん&#xA;主人／旦那／夫（おっと）　自分の&#xA;もちあるく　持ち歩く　携带　たくさんの現金を持ち歩くのは危険です。&#xA;くりかえす　繰り返す　反复　もう一度繰り返してください。&#xA;さわぐ　騒ぐ　吵嚷&#xA;まにあう　間に合う　来得及　電車に間に合わなかった。&#xA;ねむる　眠る　睡着　彼は寝ています。　彼は眠っています。&#xA;なく　鳴く　叫、鸣、啼（动物）　声&#xA;朝起きると、鳥が鳴いているのを聞きました。 なる　鳴る　鸣响、响起（物体）　音&#xA;ベルが鳴ったら、すぐ席に戻ってください。 ベル　Bell　もどる　戻る なく　泣く　哭泣</description>
    </item>
    <item>
      <title>35課</title>
      <link>https://blog.yanggliang.cc/posts/Nihongo/35%E8%AA%B2/</link>
      <pubDate>Wed, 09 Feb 2022 18:54:42 +0800</pubDate>
      <guid>https://blog.yanggliang.cc/posts/Nihongo/35%E8%AA%B2/</guid>
      <description>単語 # カタログ　商品目录 もくじ　目次　书目录 たからくじ　宝くじ　くじ（籤）　たからくじに当たる。 きく　効く　有效 いわう　祝う　入学祝い あく　空く　明日空いてる？　この部屋は空いてる？ くさる　腐る　バナナが腐ります。 みつける　見つける　仕事を見つける。 たずねる　訪ねる　友人の家を訪ねる。 たいざいする　滞在する　東京に滞在中。 さんかする　参加する　試合に参加する。 きゅうけいする　休憩する かんぱいする　乾杯する かんぜんなじゅんび　完全な準備 春になると、だんだん暖かくなる。 暖かい　あたたかい 秋になると、紅葉の葉がだんだん赤くなります。 紅葉　もみじ 赤い　あかい 文法 # ～たら、～ # 未知的假定条件：如果~，就~&#xA;以可预见的事情或状态作条件，后续不能使用过去式，表示预计的情况&#xA;满足前项条件，出现了后项预料之外的结果，后续使用存续状态或过去式，用法与と相同&#xA;与「と」不同的是，「たら」的后項可以接意志，请求，命令等表达。&#xA;雨だったら　雨でなかったら 雨でしたら　雨でありませんでしたら もし宝くじに当たったら、新しい家を買うつもりです。 要是中彩票了，我打算买个新房子。 今月暇でなかったら、来なくてもいいです。 天気が良かったら、ハイキングに行きます。 天气好的话，我就去郊游。 来週の金曜日、帰国する。帰国したら、すぐ君に電話する。　下周五，我要回国。回国后，马上就给你打电话。 コピー機を使い終わったら、電源を切ってください。　用完打印机，请把电源关掉。 うちに帰ると／帰ったら、電気がまだついている。　回到家后，发现灯还亮着呢。 うちに着くと／着いたら、友達から手紙が来た。　到家了，发现有一封来信。 ～ても、～ # 即使~，也~ 休みの日でも、忙しいです。 簡単な単語でも、なかなか覚えることができない。　即使是简单的单词也怎么都记不住。 日本語が上手ではなくても、この仕事はできますよ。 私はスペイン語を知らないので、見ても分かりません。 この言葉はいくら調べても、たぶん辞書にはないでしょう。　这个说法无论怎么查，字典里可能都不会有吧。（いくら～ても、～。　不管怎样，无论怎样都~） 必要ではないものがいくら安くても、買いません。 これは小学生でもできる計算です。 よく効く薬でも、たくさん飲むと体によくありません。 日本人でも知らない日本語。 ～だけ、～ # これは全部、他のはない。</description>
    </item>
    <item>
      <title>Percolator</title>
      <link>https://blog.yanggliang.cc/posts/PaperReading/Percolator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://blog.yanggliang.cc/posts/PaperReading/Percolator/</guid>
      <description>论文链接 # Paper: Large-scale Incremental Processing Using Distributed Transactions and Notifications&#xA;算法描述 # BigTable 提供了单行的事务操作，但是有些事务是需要多行操作的，Percolator 解决的就是在 BigTable 上的多行事务操作。&#xA;Percolator 实现的分布式事务依赖于三个实体： Percolator worker、TSO（timestamp oracle）、BigTable。TSO 是一个全局严格递增的时间戳服务。&#xA;Percolator 存储一行数据时，会在 BigTable 存储多列数据：&#xA;data 列： 存储 value lock 列： 存储用于分布式事务的锁信息 write 列： 存储用于分布式事务的提交时间（commit_timestamp） Transaction: Write # Percolator 的分布式写事务是由两阶段提交实现的。一个写事务包含了多个写操作，事务开启时，Percolator 会从 TSO 获得一个 ts 作为事务的开始时间。包含两个阶段。&#xA;PreWrite阶段&#xA;在所有的写操作中随机选取一个作为 primary，其他的写操作作为 secondary。首先操作 primary。 进行冲突检测。 如果在 start_ts 之后，发现 write 列存在数据，说明其他事务在当前事务开始之后提交了。说明两个事务并发写冲突，需要 abort 当前的事务。 如果在任何 ts 上发现 lock 列有数据，说明其他事务正在修改数据，仍然 abort 当前事务。也可能是另一个事务崩溃失败，需要故障恢复。 锁定和写入。对于每一行每一列要写入的数据，先将其锁定（primary 写 lock 列，secondary 的 lock 列写入指向 primary），然后写入到 data 列中。 Commit阶段</description>
    </item>
  </channel>
</rss>
